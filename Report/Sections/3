Задание 1: 
1) Провести анализ существующих на рынке Баз данных.
Таблица 1 – Сравнительный анализ
Базы данных	Плюсы	Минусы
PostgreSQL	Мощная, расширяемая, поддерживает сложные запросы и типы данных, ACID-транзакции, бесплатная.	Может быть сложнее в настройке и управлении, чем MySQL.
MySQL	Популярная, простая в использовании, быстрая, бесплатная, большое сообщество.	Менее функциональна, чем PostgreSQL, менее надежна в некоторых сценариях.
Microsoft SQL Server	Мощная, интегрирована с продуктами Microsoft, отличная поддержка, продвинутые инструменты.	Платная, привязка к экосистеме Microsoft.
MariaDB	Open-source, обратно совместима с MySQL, улучшенная производительность, больше возможностей.	Меньшее сообщество, чем у MySQL.

2) Выбрать подходящую для реализации работы базу данных, исходя из анализа ее преимуществ.
Я выбрала базу данных Microsoft SQL Server, так как я уже с ней знакома и она для меня самая удобная в использовании.
Задание 2: 
Выбрать предметную область.
Из предложенных предметных областей я выбрала «База данных обнаружения царапин и сколов на экранах смартфонов». 
Задание 3: 
1) Составить Техническое задание на разработку базы данных (Приложение А).
2) Составить «Концептуальная модель» (ER-диаграмма).
3) Составить «Логическая модель» данных.
Таблица 2 – Описание таблицы Smartphone
Название	Поле	Тип данных	Ограничения
Уникальный идентификатор смартфона	ID_Smartphone	INT	Автоматически генерируется
Модель	Model	VARCHAR	Ограничение в 225 символов
Производитель	Manufacturer	VARCHAR	Ограничение в 225 символов
Серийный номер	Number	VARCHAR	Ограничение в 225 символов
Дата производства	Production_date	DATE	-
Уникальный идентификатор партии	ID_party	INT	Внешний ключ

Таблица 3 – Описание таблицы Screen
Название	Поле	Тип данных	Ограничения
Уникальный идентификатор экрана	ID_Screen	INT	Автоматически генерируется
Уникальный идентификатор смартфона	ID_Smartphone	INT	Внешний ключ
Материал	Material	VARCHAR	Ограничение в 225 символов
Поставщик	Supplier	VARCHAR	Ограничение в 225 символов
Дата установки	Installation_date	DATE	-

Таблица 4 -  Описание таблицы Image
Название	Поле	Тип данных	Ограничения
Уникальный идентификатор изображения	ID_Image	INT	Автоматически генерируется
Уникальный идентификатор дефекта	ID_Defect	INT	Внешний ключ
Путь к файлу	File_path	VARCHAR	Ограничение в 225 символов

Таблица 5 – Описание таблицы Party
Название	Поле	Тип данных	Ограничения
Уникальный идентификатор партии	ID_Party	INT	Автоматически генерируется
Номер партии	Number	INT	Ограничение в 225 символов
Дата производства партии	Production_date	DATE	-
Количество смартфонов	Quantily	INT	Ограничение в 225 символов

Таблица 6 – Описание таблицы Defect
Название	Поле	Тип данных	Ограничения
Уникальный идентификатор дефекта	ID_Defect	INT	Автоматически генерируется
Уникальный идентификатор экрана	ID_Screen	INT	Внешний ключ
Тип дефекта	Type	VARCHAR	Ограничение в 225 символов
Размер дефекта	Size	INT	Ограничение в 225 символов
Координаты	Coordinates	VARCHAR	Ограничение в 225 символов
Дата обнаружения	Date_discovery	DATE	-
Уникальный идентификатор контролера	ID_Controler	INT	Внешний ключ

Таблица 7 – Описание таблицы Controler
Название	Поле	Тип данных	Ограничения
Уникальный идентификатор контролера	ID_Controler	INT	Автоматически генерируется
Имя	Name	VARCHAR	Ограничение в 225 символов
Фамилия	Surname	VARCHAR	Ограничение в 225 символов

4) Реализовать «Физическая модель» данных: 
a. Конкретная реализация в СУБД.
Для каждой таблицы определен первичный ключ PRIMARY KEY. Определены внешние ключи для установления связей между таблицами и обеспечения целостности данных FOREIGN KEY. Созданы индексы для полей, которые часто используются в запросах. Триггеры в данном случае не являются необходимыми.
b. Скрипты создания таблиц, индексов (Приложение Б).
c. Настройки хранилища (размеры табличных пространств, кодировки). 
5) Описать бизнес-правила и ограничений: 
a. Условия целостности (CHECK, NOT NULL, UNIQUE). 
Для полей, которые должны быть уникальными используется UNIQUE. Для полей, которые не могут быть пустыми используется NOT NULL.
b. Описание каскадных операций.
6) Разработать регламент доступа и безопасности: 
a. Роли пользователей. 
Администратор: Имеет полный доступ ко всем объектам базы данных. Может создавать пользователей, назначать роли, настраивать резервное копирование и восстановление.
Редактор: Может читать, добавлять, изменять и удалять данные в определенных таблицах. Не имеет прав на изменение структуры базы данных.
Читатель: Может только читать данные в определенных таблицах или представлениях.  Не может изменять или удалять данные.
b. Права доступа.
с. Политика резервного копирования. 
Полное резервное копирование: Еженедельно  в выходные дни.
Разностное резервное копирование: Ежедневно.
Резервное копирование журнала транзакций: Каждые 30 минут.
7)	Техническая документация для разработчиков (Приложение В).
8)	Руководство администратора БД (Приложение Г).
